/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.soldier.platform.oa.user;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class OaUserPage implements org.apache.thrift.TBase<OaUserPage, OaUserPage._Fields>, java.io.Serializable, Cloneable, Comparable<OaUserPage> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("OaUserPage");

  private static final org.apache.thrift.protocol.TField TOTAL_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("totalCount", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField PAGE_RECORDS_FIELD_DESC = new org.apache.thrift.protocol.TField("pageRecords", org.apache.thrift.protocol.TType.LIST, (short)2);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new OaUserPageStandardSchemeFactory());
    schemes.put(TupleScheme.class, new OaUserPageTupleSchemeFactory());
  }

  public int totalCount; // required
  public List<OaUser> pageRecords; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    TOTAL_COUNT((short)1, "totalCount"),
    PAGE_RECORDS((short)2, "pageRecords");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // TOTAL_COUNT
          return TOTAL_COUNT;
        case 2: // PAGE_RECORDS
          return PAGE_RECORDS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __TOTALCOUNT_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.TOTAL_COUNT, new org.apache.thrift.meta_data.FieldMetaData("totalCount", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PAGE_RECORDS, new org.apache.thrift.meta_data.FieldMetaData("pageRecords", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, OaUser.class))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(OaUserPage.class, metaDataMap);
  }

  public OaUserPage() {
  }

  public OaUserPage(
    int totalCount,
    List<OaUser> pageRecords)
  {
    this();
    this.totalCount = totalCount;
    setTotalCountIsSet(true);
    this.pageRecords = pageRecords;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public OaUserPage(OaUserPage other) {
    __isset_bitfield = other.__isset_bitfield;
    this.totalCount = other.totalCount;
    if (other.isSetPageRecords()) {
      List<OaUser> __this__pageRecords = new ArrayList<OaUser>(other.pageRecords.size());
      for (OaUser other_element : other.pageRecords) {
        __this__pageRecords.add(new OaUser(other_element));
      }
      this.pageRecords = __this__pageRecords;
    }
  }

  public OaUserPage deepCopy() {
    return new OaUserPage(this);
  }

  @Override
  public void clear() {
    setTotalCountIsSet(false);
    this.totalCount = 0;
    this.pageRecords = null;
  }

  public int getTotalCount() {
    return this.totalCount;
  }

  public OaUserPage setTotalCount(int totalCount) {
    this.totalCount = totalCount;
    setTotalCountIsSet(true);
    return this;
  }

  public void unsetTotalCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALCOUNT_ISSET_ID);
  }

  /** Returns true if field totalCount is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalCount() {
    return EncodingUtils.testBit(__isset_bitfield, __TOTALCOUNT_ISSET_ID);
  }

  public void setTotalCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALCOUNT_ISSET_ID, value);
  }

  public int getPageRecordsSize() {
    return (this.pageRecords == null) ? 0 : this.pageRecords.size();
  }

  public java.util.Iterator<OaUser> getPageRecordsIterator() {
    return (this.pageRecords == null) ? null : this.pageRecords.iterator();
  }

  public void addToPageRecords(OaUser elem) {
    if (this.pageRecords == null) {
      this.pageRecords = new ArrayList<OaUser>();
    }
    this.pageRecords.add(elem);
  }

  public List<OaUser> getPageRecords() {
    return this.pageRecords;
  }

  public OaUserPage setPageRecords(List<OaUser> pageRecords) {
    this.pageRecords = pageRecords;
    return this;
  }

  public void unsetPageRecords() {
    this.pageRecords = null;
  }

  /** Returns true if field pageRecords is set (has been assigned a value) and false otherwise */
  public boolean isSetPageRecords() {
    return this.pageRecords != null;
  }

  public void setPageRecordsIsSet(boolean value) {
    if (!value) {
      this.pageRecords = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case TOTAL_COUNT:
      if (value == null) {
        unsetTotalCount();
      } else {
        setTotalCount((Integer)value);
      }
      break;

    case PAGE_RECORDS:
      if (value == null) {
        unsetPageRecords();
      } else {
        setPageRecords((List<OaUser>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case TOTAL_COUNT:
      return Integer.valueOf(getTotalCount());

    case PAGE_RECORDS:
      return getPageRecords();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case TOTAL_COUNT:
      return isSetTotalCount();
    case PAGE_RECORDS:
      return isSetPageRecords();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof OaUserPage)
      return this.equals((OaUserPage)that);
    return false;
  }

  public boolean equals(OaUserPage that) {
    if (that == null)
      return false;

    boolean this_present_totalCount = true;
    boolean that_present_totalCount = true;
    if (this_present_totalCount || that_present_totalCount) {
      if (!(this_present_totalCount && that_present_totalCount))
        return false;
      if (this.totalCount != that.totalCount)
        return false;
    }

    boolean this_present_pageRecords = true && this.isSetPageRecords();
    boolean that_present_pageRecords = true && that.isSetPageRecords();
    if (this_present_pageRecords || that_present_pageRecords) {
      if (!(this_present_pageRecords && that_present_pageRecords))
        return false;
      if (!this.pageRecords.equals(that.pageRecords))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(OaUserPage other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetTotalCount()).compareTo(other.isSetTotalCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalCount, other.totalCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPageRecords()).compareTo(other.isSetPageRecords());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPageRecords()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pageRecords, other.pageRecords);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("OaUserPage(");
    boolean first = true;

    sb.append("totalCount:");
    sb.append(this.totalCount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("pageRecords:");
    if (this.pageRecords == null) {
      sb.append("null");
    } else {
      sb.append(this.pageRecords);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // alas, we cannot check 'totalCount' because it's a primitive and you chose the non-beans generator.
    if (pageRecords == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'pageRecords' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class OaUserPageStandardSchemeFactory implements SchemeFactory {
    public OaUserPageStandardScheme getScheme() {
      return new OaUserPageStandardScheme();
    }
  }

  private static class OaUserPageStandardScheme extends StandardScheme<OaUserPage> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, OaUserPage struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // TOTAL_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.totalCount = iprot.readI32();
              struct.setTotalCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PAGE_RECORDS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list8 = iprot.readListBegin();
                struct.pageRecords = new ArrayList<OaUser>(_list8.size);
                for (int _i9 = 0; _i9 < _list8.size; ++_i9)
                {
                  OaUser _elem10;
                  _elem10 = new OaUser();
                  _elem10.read(iprot);
                  struct.pageRecords.add(_elem10);
                }
                iprot.readListEnd();
              }
              struct.setPageRecordsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetTotalCount()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'totalCount' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, OaUserPage struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(TOTAL_COUNT_FIELD_DESC);
      oprot.writeI32(struct.totalCount);
      oprot.writeFieldEnd();
      if (struct.pageRecords != null) {
        oprot.writeFieldBegin(PAGE_RECORDS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.pageRecords.size()));
          for (OaUser _iter11 : struct.pageRecords)
          {
            _iter11.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class OaUserPageTupleSchemeFactory implements SchemeFactory {
    public OaUserPageTupleScheme getScheme() {
      return new OaUserPageTupleScheme();
    }
  }

  private static class OaUserPageTupleScheme extends TupleScheme<OaUserPage> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, OaUserPage struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeI32(struct.totalCount);
      {
        oprot.writeI32(struct.pageRecords.size());
        for (OaUser _iter12 : struct.pageRecords)
        {
          _iter12.write(oprot);
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, OaUserPage struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.totalCount = iprot.readI32();
      struct.setTotalCountIsSet(true);
      {
        org.apache.thrift.protocol.TList _list13 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct.pageRecords = new ArrayList<OaUser>(_list13.size);
        for (int _i14 = 0; _i14 < _list13.size; ++_i14)
        {
          OaUser _elem15;
          _elem15 = new OaUser();
          _elem15.read(iprot);
          struct.pageRecords.add(_elem15);
        }
      }
      struct.setPageRecordsIsSet(true);
    }
  }

}

