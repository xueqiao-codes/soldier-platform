/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.soldier.platform.msgq.dao;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class MsgQCluster implements org.apache.thrift.TBase<MsgQCluster, MsgQCluster._Fields>, java.io.Serializable, Cloneable, Comparable<MsgQCluster> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("MsgQCluster");

  private static final org.apache.thrift.protocol.TField CLUSTER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("clusterName", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField CLUSTER_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("clusterType", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField CLUSTER_BROKERS_FIELD_DESC = new org.apache.thrift.protocol.TField("clusterBrokers", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField CLUSTER_PROPERTIES_FIELD_DESC = new org.apache.thrift.protocol.TField("clusterProperties", org.apache.thrift.protocol.TType.MAP, (short)4);
  private static final org.apache.thrift.protocol.TField CLUSTER_DESC_FIELD_DESC = new org.apache.thrift.protocol.TField("clusterDesc", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField CREATE_TIMESTAMP_FIELD_DESC = new org.apache.thrift.protocol.TField("createTimestamp", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField LASTMODIFY_TIMESTAMP_FIELD_DESC = new org.apache.thrift.protocol.TField("lastmodifyTimestamp", org.apache.thrift.protocol.TType.I32, (short)11);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new MsgQClusterStandardSchemeFactory());
    schemes.put(TupleScheme.class, new MsgQClusterTupleSchemeFactory());
  }

  public String clusterName; // optional
  public String clusterType; // optional
  public String clusterBrokers; // optional
  public Map<String,String> clusterProperties; // optional
  public String clusterDesc; // optional
  public int createTimestamp; // optional
  public int lastmodifyTimestamp; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    CLUSTER_NAME((short)1, "clusterName"),
    CLUSTER_TYPE((short)2, "clusterType"),
    CLUSTER_BROKERS((short)3, "clusterBrokers"),
    CLUSTER_PROPERTIES((short)4, "clusterProperties"),
    CLUSTER_DESC((short)5, "clusterDesc"),
    CREATE_TIMESTAMP((short)10, "createTimestamp"),
    LASTMODIFY_TIMESTAMP((short)11, "lastmodifyTimestamp");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // CLUSTER_NAME
          return CLUSTER_NAME;
        case 2: // CLUSTER_TYPE
          return CLUSTER_TYPE;
        case 3: // CLUSTER_BROKERS
          return CLUSTER_BROKERS;
        case 4: // CLUSTER_PROPERTIES
          return CLUSTER_PROPERTIES;
        case 5: // CLUSTER_DESC
          return CLUSTER_DESC;
        case 10: // CREATE_TIMESTAMP
          return CREATE_TIMESTAMP;
        case 11: // LASTMODIFY_TIMESTAMP
          return LASTMODIFY_TIMESTAMP;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __CREATETIMESTAMP_ISSET_ID = 0;
  private static final int __LASTMODIFYTIMESTAMP_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.CLUSTER_NAME,_Fields.CLUSTER_TYPE,_Fields.CLUSTER_BROKERS,_Fields.CLUSTER_PROPERTIES,_Fields.CLUSTER_DESC,_Fields.CREATE_TIMESTAMP,_Fields.LASTMODIFY_TIMESTAMP};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.CLUSTER_NAME, new org.apache.thrift.meta_data.FieldMetaData("clusterName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLUSTER_TYPE, new org.apache.thrift.meta_data.FieldMetaData("clusterType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLUSTER_BROKERS, new org.apache.thrift.meta_data.FieldMetaData("clusterBrokers", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLUSTER_PROPERTIES, new org.apache.thrift.meta_data.FieldMetaData("clusterProperties", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.CLUSTER_DESC, new org.apache.thrift.meta_data.FieldMetaData("clusterDesc", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIMESTAMP, new org.apache.thrift.meta_data.FieldMetaData("createTimestamp", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LASTMODIFY_TIMESTAMP, new org.apache.thrift.meta_data.FieldMetaData("lastmodifyTimestamp", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(MsgQCluster.class, metaDataMap);
  }

  public MsgQCluster() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public MsgQCluster(MsgQCluster other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetClusterName()) {
      this.clusterName = other.clusterName;
    }
    if (other.isSetClusterType()) {
      this.clusterType = other.clusterType;
    }
    if (other.isSetClusterBrokers()) {
      this.clusterBrokers = other.clusterBrokers;
    }
    if (other.isSetClusterProperties()) {
      Map<String,String> __this__clusterProperties = new HashMap<String,String>(other.clusterProperties);
      this.clusterProperties = __this__clusterProperties;
    }
    if (other.isSetClusterDesc()) {
      this.clusterDesc = other.clusterDesc;
    }
    this.createTimestamp = other.createTimestamp;
    this.lastmodifyTimestamp = other.lastmodifyTimestamp;
  }

  public MsgQCluster deepCopy() {
    return new MsgQCluster(this);
  }

  @Override
  public void clear() {
    this.clusterName = null;
    this.clusterType = null;
    this.clusterBrokers = null;
    this.clusterProperties = null;
    this.clusterDesc = null;
    setCreateTimestampIsSet(false);
    this.createTimestamp = 0;
    setLastmodifyTimestampIsSet(false);
    this.lastmodifyTimestamp = 0;
  }

  public String getClusterName() {
    return this.clusterName;
  }

  public MsgQCluster setClusterName(String clusterName) {
    this.clusterName = clusterName;
    return this;
  }

  public void unsetClusterName() {
    this.clusterName = null;
  }

  /** Returns true if field clusterName is set (has been assigned a value) and false otherwise */
  public boolean isSetClusterName() {
    return this.clusterName != null;
  }

  public void setClusterNameIsSet(boolean value) {
    if (!value) {
      this.clusterName = null;
    }
  }

  public String getClusterType() {
    return this.clusterType;
  }

  public MsgQCluster setClusterType(String clusterType) {
    this.clusterType = clusterType;
    return this;
  }

  public void unsetClusterType() {
    this.clusterType = null;
  }

  /** Returns true if field clusterType is set (has been assigned a value) and false otherwise */
  public boolean isSetClusterType() {
    return this.clusterType != null;
  }

  public void setClusterTypeIsSet(boolean value) {
    if (!value) {
      this.clusterType = null;
    }
  }

  public String getClusterBrokers() {
    return this.clusterBrokers;
  }

  public MsgQCluster setClusterBrokers(String clusterBrokers) {
    this.clusterBrokers = clusterBrokers;
    return this;
  }

  public void unsetClusterBrokers() {
    this.clusterBrokers = null;
  }

  /** Returns true if field clusterBrokers is set (has been assigned a value) and false otherwise */
  public boolean isSetClusterBrokers() {
    return this.clusterBrokers != null;
  }

  public void setClusterBrokersIsSet(boolean value) {
    if (!value) {
      this.clusterBrokers = null;
    }
  }

  public int getClusterPropertiesSize() {
    return (this.clusterProperties == null) ? 0 : this.clusterProperties.size();
  }

  public void putToClusterProperties(String key, String val) {
    if (this.clusterProperties == null) {
      this.clusterProperties = new HashMap<String,String>();
    }
    this.clusterProperties.put(key, val);
  }

  public Map<String,String> getClusterProperties() {
    return this.clusterProperties;
  }

  public MsgQCluster setClusterProperties(Map<String,String> clusterProperties) {
    this.clusterProperties = clusterProperties;
    return this;
  }

  public void unsetClusterProperties() {
    this.clusterProperties = null;
  }

  /** Returns true if field clusterProperties is set (has been assigned a value) and false otherwise */
  public boolean isSetClusterProperties() {
    return this.clusterProperties != null;
  }

  public void setClusterPropertiesIsSet(boolean value) {
    if (!value) {
      this.clusterProperties = null;
    }
  }

  public String getClusterDesc() {
    return this.clusterDesc;
  }

  public MsgQCluster setClusterDesc(String clusterDesc) {
    this.clusterDesc = clusterDesc;
    return this;
  }

  public void unsetClusterDesc() {
    this.clusterDesc = null;
  }

  /** Returns true if field clusterDesc is set (has been assigned a value) and false otherwise */
  public boolean isSetClusterDesc() {
    return this.clusterDesc != null;
  }

  public void setClusterDescIsSet(boolean value) {
    if (!value) {
      this.clusterDesc = null;
    }
  }

  public int getCreateTimestamp() {
    return this.createTimestamp;
  }

  public MsgQCluster setCreateTimestamp(int createTimestamp) {
    this.createTimestamp = createTimestamp;
    setCreateTimestampIsSet(true);
    return this;
  }

  public void unsetCreateTimestamp() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIMESTAMP_ISSET_ID);
  }

  /** Returns true if field createTimestamp is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTimestamp() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIMESTAMP_ISSET_ID);
  }

  public void setCreateTimestampIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIMESTAMP_ISSET_ID, value);
  }

  public int getLastmodifyTimestamp() {
    return this.lastmodifyTimestamp;
  }

  public MsgQCluster setLastmodifyTimestamp(int lastmodifyTimestamp) {
    this.lastmodifyTimestamp = lastmodifyTimestamp;
    setLastmodifyTimestampIsSet(true);
    return this;
  }

  public void unsetLastmodifyTimestamp() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTMODIFYTIMESTAMP_ISSET_ID);
  }

  /** Returns true if field lastmodifyTimestamp is set (has been assigned a value) and false otherwise */
  public boolean isSetLastmodifyTimestamp() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTMODIFYTIMESTAMP_ISSET_ID);
  }

  public void setLastmodifyTimestampIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTMODIFYTIMESTAMP_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case CLUSTER_NAME:
      if (value == null) {
        unsetClusterName();
      } else {
        setClusterName((String)value);
      }
      break;

    case CLUSTER_TYPE:
      if (value == null) {
        unsetClusterType();
      } else {
        setClusterType((String)value);
      }
      break;

    case CLUSTER_BROKERS:
      if (value == null) {
        unsetClusterBrokers();
      } else {
        setClusterBrokers((String)value);
      }
      break;

    case CLUSTER_PROPERTIES:
      if (value == null) {
        unsetClusterProperties();
      } else {
        setClusterProperties((Map<String,String>)value);
      }
      break;

    case CLUSTER_DESC:
      if (value == null) {
        unsetClusterDesc();
      } else {
        setClusterDesc((String)value);
      }
      break;

    case CREATE_TIMESTAMP:
      if (value == null) {
        unsetCreateTimestamp();
      } else {
        setCreateTimestamp((Integer)value);
      }
      break;

    case LASTMODIFY_TIMESTAMP:
      if (value == null) {
        unsetLastmodifyTimestamp();
      } else {
        setLastmodifyTimestamp((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case CLUSTER_NAME:
      return getClusterName();

    case CLUSTER_TYPE:
      return getClusterType();

    case CLUSTER_BROKERS:
      return getClusterBrokers();

    case CLUSTER_PROPERTIES:
      return getClusterProperties();

    case CLUSTER_DESC:
      return getClusterDesc();

    case CREATE_TIMESTAMP:
      return Integer.valueOf(getCreateTimestamp());

    case LASTMODIFY_TIMESTAMP:
      return Integer.valueOf(getLastmodifyTimestamp());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case CLUSTER_NAME:
      return isSetClusterName();
    case CLUSTER_TYPE:
      return isSetClusterType();
    case CLUSTER_BROKERS:
      return isSetClusterBrokers();
    case CLUSTER_PROPERTIES:
      return isSetClusterProperties();
    case CLUSTER_DESC:
      return isSetClusterDesc();
    case CREATE_TIMESTAMP:
      return isSetCreateTimestamp();
    case LASTMODIFY_TIMESTAMP:
      return isSetLastmodifyTimestamp();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof MsgQCluster)
      return this.equals((MsgQCluster)that);
    return false;
  }

  public boolean equals(MsgQCluster that) {
    if (that == null)
      return false;

    boolean this_present_clusterName = true && this.isSetClusterName();
    boolean that_present_clusterName = true && that.isSetClusterName();
    if (this_present_clusterName || that_present_clusterName) {
      if (!(this_present_clusterName && that_present_clusterName))
        return false;
      if (!this.clusterName.equals(that.clusterName))
        return false;
    }

    boolean this_present_clusterType = true && this.isSetClusterType();
    boolean that_present_clusterType = true && that.isSetClusterType();
    if (this_present_clusterType || that_present_clusterType) {
      if (!(this_present_clusterType && that_present_clusterType))
        return false;
      if (!this.clusterType.equals(that.clusterType))
        return false;
    }

    boolean this_present_clusterBrokers = true && this.isSetClusterBrokers();
    boolean that_present_clusterBrokers = true && that.isSetClusterBrokers();
    if (this_present_clusterBrokers || that_present_clusterBrokers) {
      if (!(this_present_clusterBrokers && that_present_clusterBrokers))
        return false;
      if (!this.clusterBrokers.equals(that.clusterBrokers))
        return false;
    }

    boolean this_present_clusterProperties = true && this.isSetClusterProperties();
    boolean that_present_clusterProperties = true && that.isSetClusterProperties();
    if (this_present_clusterProperties || that_present_clusterProperties) {
      if (!(this_present_clusterProperties && that_present_clusterProperties))
        return false;
      if (!this.clusterProperties.equals(that.clusterProperties))
        return false;
    }

    boolean this_present_clusterDesc = true && this.isSetClusterDesc();
    boolean that_present_clusterDesc = true && that.isSetClusterDesc();
    if (this_present_clusterDesc || that_present_clusterDesc) {
      if (!(this_present_clusterDesc && that_present_clusterDesc))
        return false;
      if (!this.clusterDesc.equals(that.clusterDesc))
        return false;
    }

    boolean this_present_createTimestamp = true && this.isSetCreateTimestamp();
    boolean that_present_createTimestamp = true && that.isSetCreateTimestamp();
    if (this_present_createTimestamp || that_present_createTimestamp) {
      if (!(this_present_createTimestamp && that_present_createTimestamp))
        return false;
      if (this.createTimestamp != that.createTimestamp)
        return false;
    }

    boolean this_present_lastmodifyTimestamp = true && this.isSetLastmodifyTimestamp();
    boolean that_present_lastmodifyTimestamp = true && that.isSetLastmodifyTimestamp();
    if (this_present_lastmodifyTimestamp || that_present_lastmodifyTimestamp) {
      if (!(this_present_lastmodifyTimestamp && that_present_lastmodifyTimestamp))
        return false;
      if (this.lastmodifyTimestamp != that.lastmodifyTimestamp)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(MsgQCluster other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetClusterName()).compareTo(other.isSetClusterName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClusterName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clusterName, other.clusterName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClusterType()).compareTo(other.isSetClusterType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClusterType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clusterType, other.clusterType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClusterBrokers()).compareTo(other.isSetClusterBrokers());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClusterBrokers()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clusterBrokers, other.clusterBrokers);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClusterProperties()).compareTo(other.isSetClusterProperties());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClusterProperties()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clusterProperties, other.clusterProperties);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClusterDesc()).compareTo(other.isSetClusterDesc());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClusterDesc()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clusterDesc, other.clusterDesc);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTimestamp()).compareTo(other.isSetCreateTimestamp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTimestamp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTimestamp, other.createTimestamp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastmodifyTimestamp()).compareTo(other.isSetLastmodifyTimestamp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastmodifyTimestamp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastmodifyTimestamp, other.lastmodifyTimestamp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("MsgQCluster(");
    boolean first = true;

    if (isSetClusterName()) {
      sb.append("clusterName:");
      if (this.clusterName == null) {
        sb.append("null");
      } else {
        sb.append(this.clusterName);
      }
      first = false;
    }
    if (isSetClusterType()) {
      if (!first) sb.append(", ");
      sb.append("clusterType:");
      if (this.clusterType == null) {
        sb.append("null");
      } else {
        sb.append(this.clusterType);
      }
      first = false;
    }
    if (isSetClusterBrokers()) {
      if (!first) sb.append(", ");
      sb.append("clusterBrokers:");
      if (this.clusterBrokers == null) {
        sb.append("null");
      } else {
        sb.append(this.clusterBrokers);
      }
      first = false;
    }
    if (isSetClusterProperties()) {
      if (!first) sb.append(", ");
      sb.append("clusterProperties:");
      if (this.clusterProperties == null) {
        sb.append("null");
      } else {
        sb.append(this.clusterProperties);
      }
      first = false;
    }
    if (isSetClusterDesc()) {
      if (!first) sb.append(", ");
      sb.append("clusterDesc:");
      if (this.clusterDesc == null) {
        sb.append("null");
      } else {
        sb.append(this.clusterDesc);
      }
      first = false;
    }
    if (isSetCreateTimestamp()) {
      if (!first) sb.append(", ");
      sb.append("createTimestamp:");
      sb.append(this.createTimestamp);
      first = false;
    }
    if (isSetLastmodifyTimestamp()) {
      if (!first) sb.append(", ");
      sb.append("lastmodifyTimestamp:");
      sb.append(this.lastmodifyTimestamp);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class MsgQClusterStandardSchemeFactory implements SchemeFactory {
    public MsgQClusterStandardScheme getScheme() {
      return new MsgQClusterStandardScheme();
    }
  }

  private static class MsgQClusterStandardScheme extends StandardScheme<MsgQCluster> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, MsgQCluster struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // CLUSTER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clusterName = iprot.readString();
              struct.setClusterNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CLUSTER_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clusterType = iprot.readString();
              struct.setClusterTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CLUSTER_BROKERS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clusterBrokers = iprot.readString();
              struct.setClusterBrokersIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CLUSTER_PROPERTIES
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map10 = iprot.readMapBegin();
                struct.clusterProperties = new HashMap<String,String>(2*_map10.size);
                for (int _i11 = 0; _i11 < _map10.size; ++_i11)
                {
                  String _key12;
                  String _val13;
                  _key12 = iprot.readString();
                  _val13 = iprot.readString();
                  struct.clusterProperties.put(_key12, _val13);
                }
                iprot.readMapEnd();
              }
              struct.setClusterPropertiesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CLUSTER_DESC
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clusterDesc = iprot.readString();
              struct.setClusterDescIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // CREATE_TIMESTAMP
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.createTimestamp = iprot.readI32();
              struct.setCreateTimestampIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // LASTMODIFY_TIMESTAMP
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.lastmodifyTimestamp = iprot.readI32();
              struct.setLastmodifyTimestampIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, MsgQCluster struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.clusterName != null) {
        if (struct.isSetClusterName()) {
          oprot.writeFieldBegin(CLUSTER_NAME_FIELD_DESC);
          oprot.writeString(struct.clusterName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.clusterType != null) {
        if (struct.isSetClusterType()) {
          oprot.writeFieldBegin(CLUSTER_TYPE_FIELD_DESC);
          oprot.writeString(struct.clusterType);
          oprot.writeFieldEnd();
        }
      }
      if (struct.clusterBrokers != null) {
        if (struct.isSetClusterBrokers()) {
          oprot.writeFieldBegin(CLUSTER_BROKERS_FIELD_DESC);
          oprot.writeString(struct.clusterBrokers);
          oprot.writeFieldEnd();
        }
      }
      if (struct.clusterProperties != null) {
        if (struct.isSetClusterProperties()) {
          oprot.writeFieldBegin(CLUSTER_PROPERTIES_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.clusterProperties.size()));
            for (Map.Entry<String, String> _iter14 : struct.clusterProperties.entrySet())
            {
              oprot.writeString(_iter14.getKey());
              oprot.writeString(_iter14.getValue());
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.clusterDesc != null) {
        if (struct.isSetClusterDesc()) {
          oprot.writeFieldBegin(CLUSTER_DESC_FIELD_DESC);
          oprot.writeString(struct.clusterDesc);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetCreateTimestamp()) {
        oprot.writeFieldBegin(CREATE_TIMESTAMP_FIELD_DESC);
        oprot.writeI32(struct.createTimestamp);
        oprot.writeFieldEnd();
      }
      if (struct.isSetLastmodifyTimestamp()) {
        oprot.writeFieldBegin(LASTMODIFY_TIMESTAMP_FIELD_DESC);
        oprot.writeI32(struct.lastmodifyTimestamp);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class MsgQClusterTupleSchemeFactory implements SchemeFactory {
    public MsgQClusterTupleScheme getScheme() {
      return new MsgQClusterTupleScheme();
    }
  }

  private static class MsgQClusterTupleScheme extends TupleScheme<MsgQCluster> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, MsgQCluster struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetClusterName()) {
        optionals.set(0);
      }
      if (struct.isSetClusterType()) {
        optionals.set(1);
      }
      if (struct.isSetClusterBrokers()) {
        optionals.set(2);
      }
      if (struct.isSetClusterProperties()) {
        optionals.set(3);
      }
      if (struct.isSetClusterDesc()) {
        optionals.set(4);
      }
      if (struct.isSetCreateTimestamp()) {
        optionals.set(5);
      }
      if (struct.isSetLastmodifyTimestamp()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetClusterName()) {
        oprot.writeString(struct.clusterName);
      }
      if (struct.isSetClusterType()) {
        oprot.writeString(struct.clusterType);
      }
      if (struct.isSetClusterBrokers()) {
        oprot.writeString(struct.clusterBrokers);
      }
      if (struct.isSetClusterProperties()) {
        {
          oprot.writeI32(struct.clusterProperties.size());
          for (Map.Entry<String, String> _iter15 : struct.clusterProperties.entrySet())
          {
            oprot.writeString(_iter15.getKey());
            oprot.writeString(_iter15.getValue());
          }
        }
      }
      if (struct.isSetClusterDesc()) {
        oprot.writeString(struct.clusterDesc);
      }
      if (struct.isSetCreateTimestamp()) {
        oprot.writeI32(struct.createTimestamp);
      }
      if (struct.isSetLastmodifyTimestamp()) {
        oprot.writeI32(struct.lastmodifyTimestamp);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, MsgQCluster struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.clusterName = iprot.readString();
        struct.setClusterNameIsSet(true);
      }
      if (incoming.get(1)) {
        struct.clusterType = iprot.readString();
        struct.setClusterTypeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.clusterBrokers = iprot.readString();
        struct.setClusterBrokersIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TMap _map16 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.clusterProperties = new HashMap<String,String>(2*_map16.size);
          for (int _i17 = 0; _i17 < _map16.size; ++_i17)
          {
            String _key18;
            String _val19;
            _key18 = iprot.readString();
            _val19 = iprot.readString();
            struct.clusterProperties.put(_key18, _val19);
          }
        }
        struct.setClusterPropertiesIsSet(true);
      }
      if (incoming.get(4)) {
        struct.clusterDesc = iprot.readString();
        struct.setClusterDescIsSet(true);
      }
      if (incoming.get(5)) {
        struct.createTimestamp = iprot.readI32();
        struct.setCreateTimestampIsSet(true);
      }
      if (incoming.get(6)) {
        struct.lastmodifyTimestamp = iprot.readI32();
        struct.setLastmodifyTimestampIsSet(true);
      }
    }
  }

}

