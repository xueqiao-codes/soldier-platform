kind: Template
apiVersion: v1
metadata: 
  name: java-cronjob-template
  annotations:
    openshift.io/display-name: "Java Cronjob"
    description: "Java cronjob template! Can not access out network!"
    tags: "Java"
    iconClass: icon-openjdk
parameters: 
  - name: "NAME"
    displayName: "Name"
    description: "The template name for generate api objects, must be accepted by k8s"
    required: true
  
  - name: "CRONTAB_CONFIG"
    displayName: "Crontab Config"
    description: "The crontab config for schedule"
    required: true
    value: "0 3 * * *"

  - name: "OPENSHIFT_PROJECT_NAME"
    displayName: "The Openshift Project Name"
    description: "The Openshift Project Name for your deployment"
    required: true
    
  - name: "IMAGE_VERSION"
    displayName: "ImageVersion"
    description: "The Docker Image Version, like v1..."
    required: true
    value: "v1"
    
  - name: "MEMORY_REQUEST"
    displayName: "Minimum memory"
    description: "Minimum memory for your service"
    required: true
    value: "100Mi"
    
  - name: "MEMORY_LIMIT"
    displayName: "Maximum memory"
    description: "Maximum memory for your job"
    required: true
    value: "200Mi"
    
  - name: "CPU_REQUEST"
    displayName: "Minimum cpu"
    description: "Minimum cpu for your job"
    required: true
    value: "0.01"
    
  - name: "CPU_LIMIT"
    displayName: "Maximum cpu"
    description: "Maximum cpu for your job"
    required: true
    value: "0.5"

    
message: "The following cronjob(s) have been created in your project: ${NAME}.\n\nFor more information about using this template"
labels: 
  template: "java-cronjob-template"
  app: "${NAME}"
objects:      
- kind: CronJob
  apiVersion: batch/v1beta1
  metadata:
    name: ${NAME}
  spec:
    schedule: "${CRONTAB_CONFIG}"
    concurrencyPolicy: Replace
    jobTemplate:
      spec:
        template:
          spec:
            restartPolicy: OnFailure
            hostIPC: true
            nodeSelector:
              network.out.enabled: 'false'
            containers:
              - name: ${NAME}
                imagePullPolicy: Always
                image: "docker-registry.default.svc:5000/${OPENSHIFT_PROJECT_NAME}/${NAME}:${IMAGE_VERSION}"
                env:
                  - name: APPLOG_STDOUT_MODE
                    value: 'true'
                resources:
                  limits:
                    cpu: "${CPU_LIMIT}"
                    memory: "${MEMORY_LIMIT}"
                  requests:
                    cpu: "${CPU_REQUEST}"
                    memory: "${MEMORY_REQUEST}"
                